<?xml version="1.0" encoding="UTF-8"?>
<!--DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"-->
<chapter>
  <title>Constructing a Diagram Tool for a Model in XTools</title>

  <para>XTools provides a suite of languages for modelling and deploying
  user-interfaces. This chapter describes how diagram editors can be modelled
  and deployed in XTools.</para>

  <section>
    <title>Domain Model</title>

    <para>We want to create a diagram tool which manipulates an underlying
    domain model.</para>

    <para>As an example, let's construct a diagram editor for the component
    modelling language. Here is it's domain model:</para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="Images/domainmodel.png" />
      </imageobject>
    </mediaobject>

    <para>When we construct a diagram in the tool, we want it to manipulate
    instances of this model.</para>
  </section>

  <section>
    <title>A Candidate Diagram Syntax</title>

    <para>We want to construct an editor that:</para>

    <itemizedlist>
      <listitem>
        <para>represents Components as rounded boxes with names</para>
      </listitem>

      <listitem>
        <para>represents Ports as circles.</para>
      </listitem>

      <listitem>
        <para>represents Connectors as arrows between Ports.</para>
      </listitem>

      <listitem>
        <para>allows Ports to be connected to Components</para>
      </listitem>
    </itemizedlist>

    <para>In other words, something like the following:</para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="Images/sketch.png" />
      </imageobject>
    </mediaobject>
  </section>

  <section>
    <title>Constructing an XTool Definition</title>

    <para>Let's go through the process of constructing an XTool
    definition.</para>

    <section>
      <title>Creating the Tool Definition</title>

      <para>First, we need to create an XTool definition. This will contain
      all the information needed to support the XTool..</para>

      <para>To do this, simply right click on the class that represents the
      root type of the model to be XTooled: In this case, it is the class
      ComponentModel:</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/creatingatooldefinition.png" />
        </imageobject>
      </mediaobject>

      <para>Enter a name for the XTool, e.g. Components.</para>

      <para>A new XTool definition will be created.This will be displayed in
      the form editor and in the XTool browser.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/tooltype.png" />
        </imageobject>
      </mediaobject>
    </section>

    <section>
      <title>Adding a Node</title>

      <para>Two main types of diagram elements can be added to the tool: nodes
      and edges.</para>

      <para>Let's create a node definition that represents a Component.</para>

      <para>To do this, right click on the root type and select
	  <emphasis role="bold">New &gt; Node &gt; Root Node</emphasis>.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/creatinganode.png" />
        </imageobject>
      </mediaobject>

      <para>A choice of elements to be displayed as nodes will be shown. In
      this case, we want to select the Component element.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/selectingacomponent.png" />
        </imageobject>
      </mediaobject>

      <para>The Component node is then added to the XTool:</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/componentadded.png" />
        </imageobject>
      </mediaobject>
    </section>

    <section>
      <title>Adding a Box to the Node</title>

      <para>A Node on its own will not have a diagrammatical representation.
      To enable this, we need to add a shape to it.</para>

      <para>An Entity will be represented as a Box, so we'll add one to the
      Component node. To do this right click on the Component node and create
      a new box(filled):</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/addingabox.png" />
        </imageobject>
      </mediaobject>

      <para>Boxes can be parameterised in a wide variety of ways. In this
      case, we want the box to have a minimum width of 100, a minimum heights
      of 50 and a corner curve of 30 degrees. To change its properties, right click on
      the create box and select <emphasis role="bold">Edit</emphasis>. Change the properties as
      required:</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/boxproperties.png" />
        </imageobject>
      </mediaobject>
    </section>

    <section>
      <title>Adding an Attribute to the Box</title>

      <para>In order to be able to edit the name of the Component, we need an
      Attribute text field. This can be added to the Box as follows:</para>

      <para>Right click on the box and select <emphasis role="bold">New &gt; Attribute</emphasis>.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/addinganattribute.png" />
        </imageobject>
      </mediaobject>

      <para>Select the name Attribute from the drop down list. The new
      attribute has been added to the box:</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/attributeadded.png" />
        </imageobject>
      </mediaobject>

      <para>A Text box is automatically added to the Attribute to display it's
      value. It can be edited to view its properties.</para>

      <para>We want to ensure that the text for the Attribute is centred in
      the box. To do this, right click on the box and set its Layout to
      Centre:</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/aligningthetext.png" />
        </imageobject>
      </mediaobject>
    </section>

    <section>
      <title>Adding a Free Node</title>

      <para>A Free Node is a node whose class is not directly accessible from
      the root class. In this example, Port is a free node.</para>

      <para>To add a Free node, right click on the root element type and
      select <emphasis role="bold">New &gt; Node &gt; Free Node</emphasis>. A list of all the packages available in the
      system will be displayed. Select the Port class from the package
      Components.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/freenodeselect.png" />
        </imageobject>
      </mediaobject>

      <para>The node will be added to the browser.</para>

      <para>We want to represent a Port as an Ellipse. An ellipse can be added
      in the same way as a box:</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/addinganellipse.png" />
        </imageobject>
      </mediaobject>

      <para>We will need to adjust the size and colour of the ellipse. To
      change its fill colour, right click and select <emphasis role="bold">Colour &gt; Fill
      Colour</emphasis>.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/changingfillcolour.png" />
        </imageobject>
      </mediaobject>

      <para>The size of the ellipse can be changed by editing the properties
      of the Ellipse. In this case, we want its height and width properties to
      be 10 points, however, this is the default size, and we therefore don't
      need to make any changes.</para>
    </section>

    <section>
      <title>Adding Tool Bars</title>

      <para>Toolbar groups and buttons need to be created to enable the
      selection of a creation tool for the element.</para>

      <para>To do this, right click on the Tool Bar node and select <emphasis role="bold">New Group</emphasis>.
      Give the Group a name, e.g. Components:</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/firsttoolbarelement.png" />
        </imageobject>
      </mediaobject>

      <para>This provides a tool bar group, under which a number of tool bar
      buttons can be added.</para>

      <para>Let's create a button for adding Component nodes. Right click on
      the Component group and select <emphasis role="bold">New &gt; Node Button</emphasis>. Choose
      Root(component:Component) from the list. Change the name of the button
      to be "Component".</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/newnodebutton.png" />
        </imageobject>
      </mediaobject>

      <para>Follow exactly the same steps to add a button for Port
      nodes.</para>
    </section>

    <section>
      <title>Running the Tool</title>

      <para>One of the powerful features of XTools is that there is no compile
      cycle involved in running a tool. This makes testing a very dynamic and
      iterative process.</para>

      <para>Let's run the tool we have built so far.</para>

      <para>First, Save the XTool (right click on the Root Node and select
      Save) so that it is backed up.</para>

      <para>Next, right click on the Object node in the XTool browser (select
      Browse &gt; XTools Browser if you cannot see it in the browser) and
      select <emphasis role="bold">Add Element &gt; ComponentModel</emphasis> to create an instance of the
      ComponentModel class.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/runningtool.png" />
        </imageobject>
      </mediaobject>

      <para>A ComponentModel object will be created. To show its diagram
      select it and right click <emphasis role="bold">Create Diagram &gt; Components</emphasis>.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/addingadiagram.png" />
        </imageobject>
      </mediaobject>

      <para>A new diagram editor for the tool will be displayed. Note that the
      relevant tool bar and buttons are now available for adding Component and
      Port nodes to the tool.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/firsttool.png" />
        </imageobject>
      </mediaobject>
    </section>

    <section>
      <title>Adding Edges</title>

      <para>Another type of diagram element is an Edge (a connection between
      Nodes). Edge definitions can be added to the tool in a similar way to
      Node definitions.</para>

      <para>Edges come in two types:</para>

      <itemizedlist>
        <listitem>
          <para>Associations, which map to a class that acts as a relationship
          between elements.</para>
        </listitem>

        <listitem>
          <para>Links, which map to an attribute of a class.</para>
        </listitem>
      </itemizedlist>

      <para>We want to represent a Connector as an Association between Ports.
      To do this, we add an Association to the tool definition as
      follows:</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/creatinganassociation.png" />
        </imageobject>
      </mediaobject>

      <para>A choice of collections that the Association will map to will be
      displayed. Select the connectors collection. Next we need to select the source 
	  and target Attributes, which for our example are named the same.</para>

      <para>An Association may define the shape of its ends, and in this case
      we can chose to make its target end an arrowhead by setting the target
      arrow of the edge to be a simple arrow.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/settingthearrowtype.png" />
        </imageobject>
      </mediaobject>

      <para>The second edge to add to the tool is the link between a Component
      and a Port which corresponds to the ports attribute of the Component
      class.</para>

      <para>To do this, add a new Link to the tool using the New menu.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/addingalink.png" />
        </imageobject>
      </mediaobject>

      <para>Select the source of the Link (in this case the class Component),
      then select the attribute that will map to the link (in this case the
      attribute ports). The resulting tool is shown below:</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/linkadded.png" />
        </imageobject>
      </mediaobject>
    </section>

    <section>
      <title>Adding Edge Toolbar Buttons</title>

      <para>Edge tools bar buttons can be added in exactly the same as node
      buttons. Here the two edge buttons corresponding to the Port Link and
      Connector Association have been added.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/edgebuttonsadded.png" />
        </imageobject>
      </mediaobject>
    </section>

    <section>
      <title>Adding Menus</title>

      <para>It is possible to add menus to all diagram elements for performing
      a wide variety tasks. For example, Edit and Delete menu items, or menu
      items that perform specific XOCL commands.</para>

      <para>To add a menu item, select an element and right click on its Menu
      to add a New menu item. Here two menus have been added. An Edit menu
      item to the tool diagram and a Delete menu item to the Component
      node.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/addingadeletemenu.png" />
        </imageobject>
      </mediaobject>
    </section>

    <section>
      <title>Re-running the tool</title>

      <para>We can re-run the tool to test out it's functionality.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="Images/secondtool.png" />
        </imageobject>
      </mediaobject>

      <para>Running Edit, will show the property editor for the ComponentModel
      instance being managed by the tool.</para>

      <para>This is just the start of developing a fully blown tool.
      Additional menus and diagram elements can be added very flexibly and
      tested iteratively.</para>
    </section>
  </section>

  <section>
    <title>Other XTool Capabilities</title>

    <para>Many other XTool capabilities are supported by XMF-Mosaic, including
    support for modelling browsers and property editors. Walkthroughs for
    these capabilities will be available in the next release of the
    tool.</para>
  </section>
</chapter>